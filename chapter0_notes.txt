set is group of objects without dupes
good analogy for a set is a deck of cards:
  order doesn't matter.
  weird E thing means contains
  C_ means one set is contained in another
  {a,b,c,d} has cardinality |4|

Cartesian product is combo of all objects.  E.g. A = {1,2,3} B = {a,b,c} --->AxB= {(1,a), (1,b), (1,c)...}

Functions: def preimage():
              return image  #image is y, preimage is x.  deduped x bc of vertical line test. x always a set?
             tripling function with D {1, 2, 3} is the set {(1,3), (2, 6), (3, 9)}

if domain is multiole sets thats ok e.g D = {1,2,3}*{1,2,3} and f(x) = x * x
      {(1, 1),1), (1, 2),2), (2, 2), 4)} etc

if f(x) = x + 3 then 1 --> 4, 2 --> 5, 3 -->6, etc

co-domain is set from within domain but can also be domain.
for above example domain is all real numbers and co-domain could be {3,4,5}

image of function is all the values from the codomain that you actually plug in.
anything with multiplication would be even, so image would be all even

procedures are precise definitions, basically just math in python
computational problems are more complex, there might be multiple algorithms that work, also many possible correct outputs

Its waaay harder to go from image to pre-image than from pre-image to image.
this is at the heart of RSA encryption.
one way to do it is given a c0-domain value and you're looking for pre-image,

plug everything from the domain into f(x) and see if it matches your output.  this is hard

if preimage is D and image is F, you could say f(D) = F, or F^D

an identity function is one in which the image and preimage are the same idfunction(d)=d

you can say f(g(x)) as long as there's nothing in the image of g that isn't in the domain of f

functional inverse is a function that undoes what the first function does.  in ceasars letter + 3,
the functional inverse would be letter -3 or maybe letter + 22

a funtion is //onto// if for everything in the domain theres a corresponding value in the co-codomain
a function is //one-to-one// if it passes the vertical line test

ivertible functions are both one-to-one and onto
each function has a max of 1 functional inverse.  in the caesar example, both letter -3 and letter +22 have
the same domain and co-domain so they are identical even though they contain different procedures

PROBABILITY:
discrete distribution says something has to happen: the summation of all the possible outcomes == 1.
example would be a coin toss, where the options are {heads, tails} and f(heads)= .5 and f(tails)= .5 too.

a coin toss is also uniform because each outcome is equally likely.  written in python a key value pairs
{heads:1/2, tails:1/2}

fundamental principle of probability theory: probability of an event = sum of probs of outcomes making up that event
example would be draw a vowel.  if in set {a,e,i,o,u} then count it.whats the prob of each happening

a good analogy for onto and one-to-one is can I draw a line from each thing to the next thing and back?  if not, problems

a weakness of some cryptography systems is security through obscurity, which means your method must be hidden
caesars was a method thing.  once you know that he's shifting, you can shift too and test pretty easily

with the key/table situation, as long as you keep the key itself private, you can blast your message
to the whole world and it won't help them.
 
